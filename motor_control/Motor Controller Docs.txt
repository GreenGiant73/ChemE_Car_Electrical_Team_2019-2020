/////////////////////////////////////////////////////////
///////////////ChemE Car Motor Controller////////////////
/////////////////////////////////////////////////////////
//Created by Stephan K for the ChemE Car Team 2017-2018//
/////////////////////////////////////////////////////////

=======
|Index|
=======
1. Overview
    a. Features
        i.      Currently Implemented Control Inputs
        ii.     Smart Control
        iii.    Blink Led
        iv.     Voltage Controller
        v.      Logger
    b. Usage (modes)
    	i.		General Information
    	ii.		Smart Control Mode
    	iii.	Always Run Mode
    	iv.		Logger Mode
    	v. 		Voltage Controller Mode
2. Functions (Litterally what the functions in the program do. This goes in more detail than the features.)
3. Settings
4. Updates
5. License

=============
|1) Overview|
=============

This program is meant to run on an arduino uno or some board with the same pinout/interface. The purpose of this program is to detect some chemical timer to allow a motor to run when the chemical timer tells it to. It controlls the power to the motor through a transistor. The transistor connects the positive from the batter to the motor positive and will only supply power when the board sends a high signal to the board. 


+++++++++++++++
|1.a) Features|
+++++++++++++++


---------------------------------------------
|1.a.i) Currently Implemented Control Inputs|
---------------------------------------------

Currently there are a total of 2 control inputs. One is digital and the other is analog. 

1. Digital Input: 
The digital control input is just as it sounds, it will accepts an on or off signal from the control team and will be processed as need depending on what we set on and off to be. The accepted voltage range for the digital input on the arduino is 0V-5V. Voltages higher or lower than this CAN damage the board. In our current place, we are using a digital light sensor which emmits on if the motor should be on and off if the motor should be off. Other digital devices which function similarly will also work just as well.

2. Analog Input: 
The analog input will accept any voltage between 0V and 5V. Any voltage out of this range CAN damage the board. The analog input is different than the digital input because it reades the voltage in comparison to the reference voltage. This produces a range of 1024 values from 0 to 1023. The current state of the program just has it so if the number read by the analog in is greater than 0, then the motor should be on. If it is equal to 0, the motor should be off. This is not optimal because noise can give false positives which could be problematic. Our current setup which uses this system uses a light sensor which is connected through a voltage divider to the analog pin to read the value of the light sensor.


-----------------------
|1.a.ii) Smart Control|
-----------------------

This is a feature I created if we had a reaction which we just wanted to time to get to a specific state and would return to its initial state after a little bit of time. This feature waits for a 'reset' button to be pressed to initially turn on the motor. It then samples the control input's value over every iteration, if the state is what we want, it increments a counter. After a set amount of time which we set, it will compare the number of loops vs the number of times the control input was not at the state which we want (which designates if the motor should turn on). If this number is greater than the threshold (currently set to half the total number of checks in that interval), it will set the motor state to off and will NOT turn the motor on until the reset button is pressed again REGARDLESS of the buttons' state. This is a great feature if you know that the stop condition which you want will last for a little bit of time but not long enough for your needs.


--------------------
|1.a.iii) Blink Led|
--------------------

This feature allows for us to set the output of some pins to on and off for some time. In short, it allows us to cause an LED to blink WITHOUT having the program halt to blink it. It uses a timer and has the ability to control the number of blinks it makes (or can go until a function stops it). You can adjust the length of time the LED is on and off for as well.


-------------------------
|1.a.iv) Voltage Control|
-------------------------

This feature is currently in development. It is not FULLY implemented yet. Eventually it will read in the voltage and amperage that the battery is giving to the motor and then set the PWM to the transistor to decrease the voltage given to the motor effectively controlling the speed of the motor. More will be said about this once it is implemented.


---------------
|1.a.v) Logger|
---------------

This utilizes the same components as the Voltage Controller plus an SD card read/writer. It will read the voltage and amperage from the battery and print that data to a file on the sd card. I would also like for it to display distance but who know how that will go.


++++++++++++
|1.b) Usage|
++++++++++++




============
|5) License|
============

Currently this project is under the Apache License v2.0. More info can be found in the LICENSE.md file in the root of this repository.